## ******************************************************************************
## *
## *   Copyright (C) 1999-2011, International Business Machines
## *   Corporation and others.  All Rights Reserved.
## *
## *******************************************************************************
## Makefile.in for ICU - icudemos
## Andy Heninger, Oct 17, 2003
## Steven R. Loomis, July 27, 2006

srcdir=@srcdir@
top_srcdir=@top_srcdir@
## Build directory information
top_builddir = ..
subdir = icudemos

# srcdir must be set before this is included
include $(top_builddir)/icuapps.mk

## Extra files to remove for 'make clean'
CLEANFILES = *~ *.res  $(PKG).lst README_$(PKG).txt $(PKG).dat demolist.h

## Target information
TARGET = $(subdir)

#LDFLAGS += -L../locexp/util -liculxutil $(LDFLAGS_USTDIO) -L../apputil
#LDFLAGS += $(LDFLAGS_TOOLUTIL)
LDFLAGS += -L../usort/lib
CPPFLAGS += -I$(ICU_SOURCE)/common -I$(top_srcdir)/usort/lib
CPPFLAGS += -I$(top_srcdir)/apputil -I. -I$(srcdir)
# Want to make sure the usort.h dependency is not on the installed version .. 
#CPPFLAGS  += -I../locexp/util

# ICULIBS includes all standard ICU libraries.
# if we wanted only part of the ICU, we could use (for example) just '$(LIBS) -licuuc -lusort' ...
# -ldl is needed for DLL version
ICULIBS    +=  -L../apputil -lapputil -licuio -lusort

OBJECTS = $(TARGET).o  
HTML_FILES = $(TARGET)-content-templ.html $(TARGET)-page-templ.html

## List of standard targets
all: all-local
install: install-local
clean: clean-local
distclean : distclean-local
dist: dist-local
check: check-local

all-local: $(TARGET)

install-local: all-local install-target


install-target: all-local
	$(MKINSTALLDIRS) $(BINDIR) $(DESTDIR)$(BINDIR)/data
	$(INSTALL) $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET)
	$(INSTALL) $(srcdir)/$(TARGET)-content-templ.html $(DESTDIR)$(BINDIR)/data
	$(INSTALL) $(srcdir)/$(TARGET)-page-templ.html $(DESTDIR)$(BINDIR)/data
	$(INSTALL) $(srcdir)/icu_v2.css $(DESTDIR)$(BINDIR)/data

dist-local:

clean-local:
	@-$(INVOKE) PATH=$$PATH:$(BINDIR) $(PKGDATA) -p $(PKG)  -m $(PKGMODE) -k -c -d $(OUT) -T $(OUT) $(PKG).lst >/dev/null 2>/dev/null
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	rm -f $(OBJECTS) $(TARGET)

distclean-local: clean-local
	rm -f Makefile $(DEPS)

check-local:

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	 && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

# ICULIBS includes all standard ICU libraries.
# if we wanted only part of the ICU, we could use (for example) just
#         '$(LIBS) -licuuc -lusort' ...

PKG=$(TARGET)

-include local.mk

LOCALES=root
include $(srcdir)/icudemos.mk

icudemos.o: demolist.h

demolist.h: $(top_builddir)/icuapps.mk Makefile
	@echo Generating $@
	@echo > demolist.h "/* Generated from ../icuapps.mk.in : CGIAPPS. Do not edit. */" 
	@echo >> demolist.h "const char *demoList[] = { ";
	@for cgi in $(CGIAPPS); do \
	  echo '"'$$cgi'",' >> demolist.h ;\
	done
	@echo '};' >> demolist.h

$(TARGET) : $(OBJECTS) $(PKG)_dat.o
	$(LINK.cc) -o $@ $^ $(ICULIBS)


%.res: $(srcdir)/%.txt
	$(INVOKE) $(GENRB) -d. $<

#icons.txt: $(ICONS)/*.gif
#	echo creating $@
#	@echo "icons { " > $@
#	@for file in `cd $(ICONS) ; ls *.gif`; do \
#	  echo " $$file:import { $(ICONS)/$$file } " >> $@; \
#	done;
#	@echo "}" >> $@

RESFILES=$(LOCALES:%=%.res)
PKGMODE=static
OUT=.

$(PKG).lst: $(srcdir)/icudemos.mk     
	@echo building $@
	@(for locale in $(LOCALES); do echo $$locale.res; done; ) > $@

$(PKG)_dat.o: $(PKG).lst $(RESFILES)
	-rm -f $@
	-$(INVOKE) PATH=$$PATH:$(BINDIR) $(PKGDATA) -p $(PKG)  -m $(PKGMODE) -v -c -d $(OUT) -T $(OUT) $(PKG).lst

install-wrapper:
	@for cgi in $(CGIAPPS); do \
	  echo ln -s wrapper.sh $(DESTDIR)$(CGI_TARGET)/$$cgi ;\
	  ln -s wrapper.sh $(DESTDIR)$(CGI_TARGET)/$$cgi ;\
	done
